#include "package.fc";


global int storage::init?;                 
global int storage::next_item_index; 

global cell storage::safe_item_code; 
global int storage::safe_type; ;; 0 - soulbound (not transferable), 1 - transferable

global slice storage::jetton_wallet_address; ;; initially here is jetton_master_address and later smart_contract gets it's own jetton_wallet_address
                                             
global int storage::jetton_wallet_set;                                                                                       

global slice storage::creator_address; 


() load_data() impure inline {
    var ds = get_data().begin_parse();

    storage::init? = ds~load_uint(1);
    storage::next_item_index = ds~load_uint(32);

    storage::safe_item_code = ds~load_ref();
    storage::safe_type = ds~load_uint(1);

    storage::jetton_wallet_address = ds~load_msg_addr();
    storage::jetton_wallet_set = ds~load_uint(1);
    storage::creator_address = ds~load_msg_addr();

}

() save_data() impure inline {
    set_data(
        package::pack_safe_factory_data(storage::init?, storage::next_item_index, storage::safe_item_code, storage::safe_type, storage::jetton_wallet_address, storage::jetton_wallet_set, storage::creator_address)
    );
}
